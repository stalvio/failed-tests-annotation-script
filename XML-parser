import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import java.io.StringReader;

public class NavigateXMLDOM {
    public static Document convertStringToXMLDocument(String xmlString) {
        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            InputSource inputSource = new InputSource(new StringReader(xmlString));
            return builder.parse(inputSource);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public static void navigateXML(Document doc) {
        if (doc == null) {
            System.out.println("Document is null");
            return;
        }

        // Get the root element
        Element root = doc.getDocumentElement();
        System.out.println("Root element: " + root.getNodeName());

        // Get all elements with a specific tag name (e.g., "person")
        NodeList personList = root.getElementsByTagName("person");
        System.out.println("Number of <person> elements: " + personList.getLength());

        // Iterate through all <person> elements
        for (int i = 0; i < personList.getLength(); i++) {
            Node personNode = personList.item(i);
            if (personNode.getNodeType() == Node.ELEMENT_NODE) {
                Element personElement = (Element) personNode;
                System.out.println("\nProcessing person #" + (i + 1));

                // Get attributes (if any)
                if (personElement.hasAttributes()) {
                    String id = personElement.getAttribute("id");
                    System.out.println("ID attribute: " + id);
                }

                // Get child nodes of the <person> element
                NodeList childNodes = personElement.getChildNodes();
                for (int j = 0; j < childNodes.getLength(); j++) {
                    Node child = childNodes.item(j);
                    if (child.getNodeType() == Node.ELEMENT_NODE) {
                        Element childElement = (Element) child;
                        String tagName = childElement.getTagName();
                        String textContent = childElement.getTextContent();
                        System.out.println(tagName + ": " + textContent);
                    }
                }
            }
        }
    }

    public static void main(String[] args) {
        // Sample XML string
        String xmlString = """
            <?xml version="1.0" encoding="UTF-8"?>
            <root>
                <person id="1">
                    <name>John</name>
                    <age>30</age>
                    <city>New York</city>
                </person>
                <person id="2">
                    <name>Jane</name>
                    <age>25</age>
                    <city>Los Angeles</city>
                </person>
            </root>
            """;

        // Convert string to Document
        Document doc = convertStringToXMLDocument(xmlString);

        // Navigate the XML tree
        navigateXML(doc);
    }
}
