./gradlew cleanBuildCache
rm -rf ~/.gradle/caches/

./gradlew --stop

rm -rf ~/.gradle/daemon/

./gradlew wrapper --gradle-version=8.10

rm -rf ~/.gradle/caches/
rm -rf .gradle/

./gradlew clean

./gradlew build --refresh-dependencies

java -version

./gradlew --version

On Windows (if applicable): Use Resource Monitor or a tool like Handle (from Sysinternals) to find processes locking the directories:
bash
handle.exe -a "C:\Users\<YourUser>\.gradle\caches"
Terminate the locking processes via Task Manager or taskkill.

edge {
    WebDriverManager.edgedriver().setup()
    EdgeOptions options = new EdgeOptions()
    // Minimal options to test
    options.addArguments("--no-sandbox")
    options.addArguments("--disable-dev-shm-usage")
    options.setCapability("acceptInsecureCerts", true)
    new EdgeDriver(options)
}

import org.openqa.selenium.edge.EdgeDriver
import io.github.bonigarcia.wdm.WebDriverManager

def "test Edge directly"() {
    WebDriverManager.edgedriver().setup()
    def driver = new EdgeDriver()
    try {
        driver.get("https://www.example.com")
        println "Title: ${driver.title}"
    } finally {
        driver.quit()
    }
}

edge {
        WebDriverManager.edgedriver().setup()
        EdgeOptions options = new EdgeOptions()
        options.addArguments("--no-sandbox")
        options.addArguments("--disable-dev-shm-usage")
        options.setCapability("acceptInsecureCerts", true)
        options.setCapability("ms:edgeOptions", [args: ["--verbose", "--log-path=/tmp/edgedriver.log"]])
        new EdgeDriver(options)
    }
